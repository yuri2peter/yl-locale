{"version":3,"sources":["../src/index.js"],"names":["YlLocale","cacheKey","messages","lang","pv","YlPersistentVar","type","setState","getState","getBrowserLanguage","setLocaleType","LOCALE_TYPE","ZH_CN","EN_US","zh","en","getLocaleType","message","locale","path","split","zhCN","enUS","rel","forEach","t","e","navigator","language","browserLanguage","toLowerCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;IAEqBA,Q;;;AAWnB;;;;;;;AAOA,0BAA+D;AAAA,6BAAjDC,QAAiD;AAAA,QAAjDA,QAAiD,8BAAtC,UAAsC;AAAA,6BAA1BC,QAA0B;AAAA,QAA1BA,QAA0B,8BAAf,EAAe;AAAA,QAARC,IAAQ;;AAAA;;AAC7D,SAAKC,EAAL,GAAU,IAAIC,wBAAJ,CAAoBJ,QAApB,CAAV;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;;;;kCAEaG,I,EAAM;AAClB,WAAKF,EAAL,CAAQG,QAAR,CAAiB;AACfD,QAAAA,IAAI,EAAJA;AADe,OAAjB;AAGD;;;oCAEe;AAAA,8BACG,KAAKF,EAAL,CAAQI,QAAR,EADH;AAAA,UACNF,IADM,qBACNA,IADM;;AAEd,UAAI,CAACA,IAAL,EAAW;AACT,YAAIN,QAAQ,CAACS,kBAAT,OAAkC,OAAtC,EAA+C;AAC7C,eAAKC,aAAL,CAAmBV,QAAQ,CAACW,WAAT,CAAqBC,KAAxC;AACA,iBAAOZ,QAAQ,CAACW,WAAT,CAAqBC,KAA5B;AACD,SAHD,MAGO;AACL,eAAKF,aAAL,CAAmBV,QAAQ,CAACW,WAAT,CAAqBE,KAAxC;AACA,iBAAOb,QAAQ,CAACW,WAAT,CAAqBE,KAA5B;AACD;AACF,OARD,MAQO;AACL,eAAOP,IAAP;AACD;AACF;AAED;;;;;;;;;+CAMgC;AAAA,UAAVQ,EAAU,SAAVA,EAAU;AAAA,UAANC,EAAM,SAANA,EAAM;AAC9B,aAAO,KAAKC,aAAL,OAAyBhB,QAAQ,CAACW,WAAT,CAAqBC,KAA9C,GAAsDE,EAAtD,GAA2DC,EAAlE;AACD;AAED;;;;;;;;;kCAMcE,O,EAAwB;AAAA,UAAfC,MAAe,uEAAN,IAAM;;AACpC,UAAI;AACF,YAAMC,IAAI,GAAGF,OAAO,CAACG,KAAR,CAAc,GAAd,CAAb;AACA,YAAMjB,IAAI,GAAG,CAACe,MAAM,IAAI,KAAKF,aAAL,EAAX,MAAqChB,QAAQ,CAACW,WAAT,CAAqBC,KAA1D,GAAkE,KAAKT,IAAL,CAAUkB,IAA5E,GAAmF,KAAKlB,IAAL,CAAUmB,IAA1G;;AACA,YAAIC,GAAG,qBAAQpB,IAAR,CAAP;;AACAgB,QAAAA,IAAI,CAACK,OAAL,CAAa,UAACC,CAAD,EAAO;AAClBF,UAAAA,GAAG,GAAGA,GAAG,CAACE,CAAD,CAAT;AACD,SAFD;AAGA,eAAOF,GAAG,IAAIN,OAAd;AACD,OARD,CAQE,OAAOS,CAAP,EAAU;AACV,eAAOT,OAAO,IAAI,aAAlB;AACD;AACF;;;;;;;;AAzEkBjB,Q,CAEZS,kB,GAAqB,YAAM;AAChC,SAAO,CAACkB,SAAS,CAACC,QAAV,IAAsBD,SAAS,CAACE,eAAjC,EAAkDC,WAAlD,EAAP;AACD,C;;AAJkB9B,Q,CAMZW,W,GAAc;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,KAAK,EAAE;AAFY,C","sourcesContent":["import YlPersistentVar from 'yl-persistent-var';\n\nexport default class YlLocale {\n\n  static getBrowserLanguage = () => {\n    return (navigator.language || navigator.browserLanguage).toLowerCase();\n  };\n\n  static LOCALE_TYPE = {\n    ZH_CN: 'ZH_CN',\n    EN_US: 'EN_US',\n  };\n\n  /**\n   * 传入语言数据(json对象)\n   *\n   * @param cacheKey {string}\n   * @param messages {object}\n   * @param lang {{ zhCN, enUS }}\n   */\n  constructor({ cacheKey = 'yl-cache', messages = {}, ...lang }) {\n    this.pv = new YlPersistentVar(cacheKey);\n    this.messages = messages;\n    this.lang = lang;\n  }\n\n  setLocaleType(type) {\n    this.pv.setState({\n      type,\n    });\n  }\n\n  getLocaleType() {\n    const { type } = this.pv.getState();\n    if (!type) {\n      if (YlLocale.getBrowserLanguage() === 'zh-cn') {\n        this.setLocaleType(YlLocale.LOCALE_TYPE.ZH_CN);\n        return YlLocale.LOCALE_TYPE.ZH_CN;\n      } else {\n        this.setLocaleType(YlLocale.LOCALE_TYPE.EN_US);\n        return YlLocale.LOCALE_TYPE.EN_US;\n      }\n    } else {\n      return type;\n    }\n  }\n\n  /**\n   * 根据当前语言，简单返回对应的中文或英文\n   * @param ch mixed 中文条件下的返回值\n   * @param en mixed 英文条件下的返回值\n   * @return mixed\n   * */\n  localeMessageFormat({ zh, en }) {\n    return this.getLocaleType() === YlLocale.LOCALE_TYPE.ZH_CN ? zh : en;\n  }\n\n  /**\n   * 根据当前语言，返回指定项\n   * @param message string 语言id，选自LOCALE_MESSAGE\n   * @param locale string 本次指定的语言\n   * @return string\n   * */\n  localeMessage(message, locale = null) {\n    try {\n      const path = message.split('.');\n      const lang = (locale || this.getLocaleType()) === YlLocale.LOCALE_TYPE.ZH_CN ? this.lang.zhCN : this.lang.enUS;\n      let rel = { ...lang };\n      path.forEach((t) => {\n        rel = rel[t];\n      });\n      return rel || message;\n    } catch (e) {\n      return message || '[NOT FOUND]';\n    }\n  }\n}\n"],"file":"index.js"}